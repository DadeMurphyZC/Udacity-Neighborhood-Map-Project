/* ======= Model ======= */

/*var model = function(locs) {
    var self = this;
    self.currentLocation = null,
    self.locations = ko.observableArray(locs);
};

ko.applyBindings(new model([
        {
            clickCount : 0,
            name : 'Curbside Kitchen',
            imgSrc : 'img/434164568_fea0ad4013_z.jpg',
            imgAttribution : 'https://www.flickr.com/photos/bigtallguy/434164568'
        },
        {
            clickCount : 0,
            name : 'Sandwich Shack',
            imgSrc : 'img/4154543904_6e2428c421_z.jpg',
            imgAttribution : 'https://www.flickr.com/photos/xshamx/4154543904'
        },
        {
            clickCount : 0,
            name : 'Sub Station',
            imgSrc : 'img/22252709_010df3379e_z.jpg',
            imgAttribution : 'https://www.flickr.com/photos/kpjas/22252709'
        },
        {
            clickCount : 0,
            name : "Jerry's Pizza",
            imgSrc : 'img/1413379559_412a540d29_z.jpg',
            imgAttribution : 'https://www.flickr.com/photos/malfet/1413379559'
        },
        {
            clickCount : 0,
            name : 'The Sub Tower',
            imgSrc : 'img/9648464288_2516b35537_z.jpg',
            imgAttribution : 'https://www.flickr.com/photos/onesharp/9648464288'
        }
    ]));*/



/* ======= View ======= */

/*var locationView = function() {
    var self = this;
    self.init = function() {
        // store pointers to our DOM elements for easy access later
        this.locationElem = document.getElementById('location');
        this.locationNameElem = document.getElementById('location-name');
        this.locationImageElem = document.getElementById('location-img');
        this.countElem = document.getElementById('location-count');

        // on click, increment the current cat's counter
        this.locationImageElem.addEventListener('click', function(){
            octopus.incrementCounter();
        });

        // render this view (update the DOM elements with the right values)
        this.render();
    };

    self.render = function() {
        // update the DOM elements with values from the current cat
        var currentLocation = octopus.getCurrentLocation();
        this.countElem.textContent = currentLocation.clickCount;
        this.locationNameElem.textContent = currentLocation.name;
        this.locationImageElem.src = currentLocation.imgSrc;
    }
};*/

/*var locationListView = function() {
    var self = this;
    self.init = function() {
        // store the DOM element for easy access later
        this.locationListElem = document.getElementById('location-list');

        // render this view (update the DOM elements with the right values)
        this.render();
    };

    self.render = function() {
        var location, elem, i;
        // get the locations we'll be rendering from the octopus
        var locations = octopus.getLocations();

        // empty the cat list
        this.locationListElem.innerHTML = '';

        // loop over the locations
        for (i = 0; i < locations.length; i++) {
            // this is the cat we're currently looping over
            location = locations[i];

            // make a new cat list item and set its text
            elem = document.createElement('li');
            elem.textContent = location.name;

            // on click, setCurrentCat and render the catView
            // (this uses our closure-in-a-loop trick to connect the value
            //  of the cat variable to the click event function)
            elem.addEventListener('click', (function(locationCopy) {
                return function() {
                    octopus.setCurrentLocation(locationCopy);
                    locationView.render();
                };
            })(location));

            // finally, add the element to the list
            this.locationListElem.appendChild(elem);
        }
    }
};*/
